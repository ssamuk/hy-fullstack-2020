{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["PersonForm","addNew","newName","handleNameChange","handleNumberChange","newNumber","onSubmit","value","onChange","type","Persons","persons","onRemove","map","key","name","number","id","onClick","Filter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","searchTerm","setSearchTerm","setPersons","setNewName","setNewNumber","notification","setNotification","useEffect","personService","Notification","message","className","event","target","preventDefault","n","some","person","concat","setTimeout","find","console","log","updatedPerson","catch","error","filter","match","RegExp","toBeDeleted","length","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"wNAoBiBA,EAlBE,SAAC,GAAyE,IAAxEC,EAAuE,EAAvEA,OAAQC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,mBAAoBC,EAAgB,EAAhBA,UACxE,OACA,0BAAMC,SAAUL,GACV,qCAEE,2BAAOM,MAAOL,EAASM,SAAUL,KAGnC,sCAEE,2BAAOI,MAAOF,EAAWG,SAAUJ,KAGrC,6BAAK,4BAAQK,KAAK,UAAb,UCCEC,EAdD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAGvB,OACE,4BACGD,EAAQE,KAAI,SAAAF,GAAO,OACpB,wBAAIG,IAAKH,EAAQI,MACZJ,EAAQI,KADb,IACoBJ,EAAQK,OAD5B,QACyCL,EAAQM,GAC7C,4BAAQC,QAAU,kBAAMN,EAASD,EAAQM,MAAzC,gBCGKE,EAXF,SAAC,GAAuB,IAAtBZ,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACpB,OACA,iDACE,2BACED,MAASA,EACTC,SAAUA,M,gBCNZY,EAAU,eAwBD,EAtBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAChB,OAAOA,EAASC,SAmBP,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACR,EAAIS,GAEhB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBH,GAAMS,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EANA,SAACR,GAEZ,OADgBI,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BH,IAC5BM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCwI9BK,EAtJH,WAAO,IAAD,EACoBC,mBAAS,IAD7B,mBACTC,EADS,KACGC,EADH,OAEcF,mBAAS,IAFvB,mBAETpB,EAFS,KAEAuB,EAFA,OAGgBH,mBAAS,IAHzB,mBAGR7B,EAHQ,KAGCiC,EAHD,OAIoBJ,mBAAS,IAJ7B,mBAIR1B,EAJQ,KAIG+B,EAJH,OAKwBL,mBAAS,MALjC,mBAKTM,EALS,KAKKC,EALL,KAQhBC,qBAAU,WACRC,IAECjB,MAAK,SAAAb,GACJwB,EAAWxB,QAEZ,IAGH,IAAM+B,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,UAAU,SACZD,IAqGP,OACE,6BACE,yCACA,kBAACD,EAAD,CAAcC,QAASL,IACvB,kBAAC,EAAD,CACA9B,MAAOyB,EACPxB,SArGqB,SAAAoC,GACvBX,EAAcW,EAAMC,OAAOtC,UAqGzB,6BAAK,wCACL,kBAAC,EAAD,CACAN,OAnGW,SAAC2C,GACdA,EAAME,iBAEJ,IAAMpB,EAAY,CAClBX,KAAMb,EACNc,OAAQX,GAGN0C,GAAI,EAcR,GAHIpC,EAAQqC,MAAK,SAAAC,GAAM,OAAIA,EAAOlC,OAASW,EAAUX,UACnDgC,GAAI,IAEG,IAANA,EACDP,EAAqBd,GACpBH,MAAK,SAAAb,GACJwB,EAAWvB,EAAQuC,OAAOxC,IAC1B4B,EAAgB,GAAD,OAAIZ,EAAUX,KAAd,wBACfoC,YAAW,WACXb,EAAgB,QACf,QAGDH,EAAW,IACXC,EAAa,QAIb,CACF,IAAMa,EAAStC,EAAQyC,MAAK,SAAAH,GAAM,OAAIA,EAAOlC,OAASW,EAAUX,QAChEsC,QAAQC,IAAIL,GACZI,QAAQC,IAAIjD,GACZ,IAAMY,EAAKgC,EAAOhC,GACZsC,EAAa,2BACdN,GADc,IAEjBjC,OAAQX,IAEVmC,EAAqBvB,EAAIsC,GACxBhC,MAAK,SAAAC,GACJU,EAAWvB,EAAQE,KAAI,SAAAoC,GAAM,OAAIA,EAAOhC,KAAOA,EAAKO,EAAWyB,MAC/DX,EAAgB,WAAD,OAAYW,EAAOlC,KAAnB,qBACfoC,YAAW,WACTb,EAAgB,QACf,KACHH,EAAW,IACXC,EAAa,OAEdoB,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,EAAMjC,UAClBc,EAAgBmB,EAAMjC,UACtB2B,YAAW,WACTb,EAAgB,QACf,KACHe,QAAQC,IAAI,oBAAqBG,EAAMjC,eAsCzCtB,QAAWA,EACXG,UAAaA,EACbF,iBAlCqB,SAACyC,GAExBT,EAAWS,EAAMC,OAAOtC,QAiCtBH,mBA/BuB,SAACwC,GAE1BR,EAAaQ,EAAMC,OAAOtC,UA+BxB,uCACA,kBAAC,EAAD,CACAI,QAAWA,EAAQ+C,QAAO,SAAAT,GAAM,OAAIA,EAAOlC,KAAK4C,MAAM,IAAIC,OAAO5B,EAAY,SAC7EpB,SA/BiB,SAACK,GACpB,IAAM4C,EAAclD,EAAQ+C,QAAO,SAAAT,GAAM,OAAIA,EAAOhC,KAAOA,KACjC,IAAvB4C,EAAYC,QAAuC,IAAvBD,EAAYC,QACrCC,OAAOC,QAAQ,wCACnBxB,EACQvB,GACPM,MAAK,SAAAC,GACJU,EAAWvB,EAAQ+C,QAAO,SAAAT,GAAM,OAAIA,EAAOhC,KAAOA,cCzH1DgD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0e85f164.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({addNew, newName, handleNameChange, handleNumberChange, newNumber} ) => { \n    return(\n    <form onSubmit={addNew}>\n          <div>\n            name:\n            <input value={newName} onChange={handleNameChange}/>\n          </div>  \n  \n          <div>\n            phone:\n            <input value={newNumber} onChange={handleNumberChange}/>\n          </div>\n  \n          <div><button type=\"submit\">add</button></div>\n        </form>\n    )\n  }\n\n  export default PersonForm","import React from 'react'\n\nconst Persons = ({persons, onRemove}) => {\n\n\n    return(\n      <ul >\n        {persons.map(persons =>\n        <li key={persons.name}>\n            {persons.name} {persons.number} ID: {persons.id}\n            <button onClick ={() => onRemove(persons.id)} >Delete</button>\n        </li>)}\n      </ul>\n    )\n  }\n\n  export default Persons","import React from 'react'\n\nconst Filter = ({value, onChange}) => {\n    return(\n    <div>Filter shown with\n      <input \n        value = {value} \n        onChange={onChange}>\n      </input>\n    </div>\n    )\n  }\n\n  export default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n      return response.data\n    })\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n\n\nexport default {getAll, create, update, remove}\n\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from '../src/components/PersonForm'\nimport Persons from '../src/components/Persons'\nimport Filter from '../src/components/Filter'\nimport personService from '../src/services/persons'\n\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [notification, setNotification] = useState(null)\n  \n  \n  useEffect(() => {\n    personService\n    .getAll()\n    .then(Persons => {\n      setPersons(Persons)\n    })\n  }, [])\n\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n\n  const searchTermChange = event => {\n    setSearchTerm(event.target.value)\n  }\n\n\n  const addNew = (event) => {\n    event.preventDefault()\n    \n      const newObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    let n = true;\n\n    /* \n    for (let i = 0; i < persons.length; i++) {\n      if(persons[i].name === newObject.name){\n        n = false\n      }\n    }  \n    */\n    // Finally found way to do it without for loop (y)\n    // Leaving for loop above for self educational reasons\n    if (persons.some(person => person.name === newObject.name)){\n      n = false;\n    }\n    if(n === true){\n      personService.create(newObject)\n      .then(Persons => {\n        setPersons(persons.concat(Persons))\n        setNotification(`${newObject.name} added to phonebook`)\n        setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n      })\n      \n        setNewName('')\n        setNewNumber('')\n        \n    }\n    \n    else{\n      const person = persons.find(person => person.name === newObject.name)\n      console.log(person);\n      console.log(newNumber)\n      const id = person.id\n      const updatedPerson = {\n        ...person,\n        number: newNumber\n      }\n      personService.update(id, updatedPerson)\n      .then(response => {\n        setPersons(persons.map(person => person.id === id ? response : person))\n        setNotification(`ALERT! '${person.name}' number updated`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        console.log(error.response)\n        setNotification(error.response)\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        console.log('new line at error', error.response)\n      })\n    } \n    \n  }\n  \n  const handleNameChange = (event) => {\n    // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleRemove = (id) => {\n    const toBeDeleted = persons.filter(person => person.id === id)\n    if(toBeDeleted.length === 1 || toBeDeleted.length === 2){\n      if (window.confirm(\"Do you really want to delete he/she\")){\n      personService\n      .remove(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n      <Filter\n      value={searchTerm}\n      onChange={searchTermChange}/>\n      <div><h2>Add new</h2></div>\n      <PersonForm \n      addNew = {addNew} \n      newName = {newName} \n      newNumber = {newNumber}\n      handleNameChange = {handleNameChange} \n      handleNumberChange = {handleNumberChange} \n      />\n      <h2>Numbers</h2>\n      <Persons\n      persons = {persons.filter(person => person.name.match(new RegExp(searchTerm, 'i')))}\n      onRemove = {handleRemove}\n      />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}